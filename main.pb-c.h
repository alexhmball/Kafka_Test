/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: main.proto */

#ifndef PROTOBUF_C_main_2eproto__INCLUDED
#define PROTOBUF_C_main_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct App__IpPort App__IpPort;
typedef struct App__Connection App__Connection;


/* --- enums --- */

typedef enum _App__Protocol {
  APP__PROTOCOL__OTHER = 0,
  APP__PROTOCOL__TCP = 6,
  APP__PROTOCOL__UDP = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(APP__PROTOCOL)
} App__Protocol;

/* --- messages --- */

struct  App__IpPort
{
  ProtobufCMessage base;
  ProtobufCBinaryData ip;
  uint32_t port;
};
#define APP__IP_PORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&app__ip_port__descriptor) \
    , {0,NULL}, 0 }


struct  App__Connection
{
  ProtobufCMessage base;
  App__IpPort *src;
  App__IpPort *dst;
  uint64_t timest;
  size_t n_app_ids;
  uint32_t *app_ids;
  App__Protocol protocol;
};
#define APP__CONNECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&app__connection__descriptor) \
    , NULL, NULL, 0, 0,NULL, APP__PROTOCOL__OTHER }


/* App__IpPort methods */
void   app__ip_port__init
                     (App__IpPort         *message);
size_t app__ip_port__get_packed_size
                     (const App__IpPort   *message);
size_t app__ip_port__pack
                     (const App__IpPort   *message,
                      uint8_t             *out);
size_t app__ip_port__pack_to_buffer
                     (const App__IpPort   *message,
                      ProtobufCBuffer     *buffer);
App__IpPort *
       app__ip_port__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   app__ip_port__free_unpacked
                     (App__IpPort *message,
                      ProtobufCAllocator *allocator);
/* App__Connection methods */
void   app__connection__init
                     (App__Connection         *message);
size_t app__connection__get_packed_size
                     (const App__Connection   *message);
size_t app__connection__pack
                     (const App__Connection   *message,
                      uint8_t             *out);
size_t app__connection__pack_to_buffer
                     (const App__Connection   *message,
                      ProtobufCBuffer     *buffer);
App__Connection *
       app__connection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   app__connection__free_unpacked
                     (App__Connection *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*App__IpPort_Closure)
                 (const App__IpPort *message,
                  void *closure_data);
typedef void (*App__Connection_Closure)
                 (const App__Connection *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    app__protocol__descriptor;
extern const ProtobufCMessageDescriptor app__ip_port__descriptor;
extern const ProtobufCMessageDescriptor app__connection__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_main_2eproto__INCLUDED */
