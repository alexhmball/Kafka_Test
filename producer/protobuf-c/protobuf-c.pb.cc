// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf-c/protobuf-c.proto

#include "protobuf-c/protobuf-c.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2dc_2fprotobuf_2dc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2dc_2fprotobuf_2dc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2dc_2fprotobuf_2dc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto;
class ProtobufCFileOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtobufCFileOptions> _instance;
} _ProtobufCFileOptions_default_instance_;
class ProtobufCMessageOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtobufCMessageOptions> _instance;
} _ProtobufCMessageOptions_default_instance_;
class ProtobufCFieldOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtobufCFieldOptions> _instance;
} _ProtobufCFieldOptions_default_instance_;
static void InitDefaultsscc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufCFieldOptions_default_instance_;
    new (ptr) ::ProtobufCFieldOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufCFieldOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto}, {}};

static void InitDefaultsscc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufCFileOptions_default_instance_;
    new (ptr) ::ProtobufCFileOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufCFileOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto}, {}};

static void InitDefaultsscc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.DefaultConstruct();
  *::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get_mutable() = std::string("base", 4);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get_mutable());
  {
    void* ptr = &::_ProtobufCMessageOptions_default_instance_;
    new (ptr) ::ProtobufCMessageOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufCMessageOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protobuf_2dc_2fprotobuf_2dc_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protobuf_2dc_2fprotobuf_2dc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protobuf_2dc_2fprotobuf_2dc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protobuf_2dc_2fprotobuf_2dc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, no_generate_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, gen_pack_helpers_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, gen_init_helpers_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, const_strings_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, use_oneof_field_name_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFileOptions, c_package_),
  1,
  4,
  5,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtobufCMessageOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCMessageOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtobufCMessageOptions, gen_pack_helpers_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCMessageOptions, gen_init_helpers_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCMessageOptions, base_field_name_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtobufCFieldOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtobufCFieldOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtobufCFieldOptions, string_as_bytes_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::ProtobufCFileOptions)},
  { 17, 25, sizeof(::ProtobufCMessageOptions)},
  { 28, 34, sizeof(::ProtobufCFieldOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtobufCFileOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtobufCMessageOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtobufCFieldOptions_default_instance_),
};

const char descriptor_table_protodef_protobuf_2dc_2fprotobuf_2dc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033protobuf-c/protobuf-c.proto\032 google/pr"
  "otobuf/descriptor.proto\"\310\001\n\024ProtobufCFil"
  "eOptions\022\032\n\013no_generate\030\001 \001(\010:\005false\022\036\n\020"
  "gen_pack_helpers\030\002 \001(\010:\004true\022\036\n\020gen_init"
  "_helpers\030\003 \001(\010:\004true\022\034\n\rconst_strings\030\004 "
  "\001(\010:\005false\022#\n\024use_oneof_field_name\030\005 \001(\010"
  ":\005false\022\021\n\tc_package\030\006 \001(\t\"y\n\027ProtobufCM"
  "essageOptions\022\037\n\020gen_pack_helpers\030\001 \001(\010:"
  "\005false\022\036\n\020gen_init_helpers\030\002 \001(\010:\004true\022\035"
  "\n\017base_field_name\030\003 \001(\t:\004base\"7\n\025Protobu"
  "fCFieldOptions\022\036\n\017string_as_bytes\030\001 \001(\010:"
  "\005false:G\n\tpb_c_file\022\034.google.protobuf.Fi"
  "leOptions\030\373\007 \001(\0132\025.ProtobufCFileOptions:"
  "L\n\010pb_c_msg\022\037.google.protobuf.MessageOpt"
  "ions\030\373\007 \001(\0132\030.ProtobufCMessageOptions:J\n"
  "\npb_c_field\022\035.google.protobuf.FieldOptio"
  "ns\030\373\007 \001(\0132\026.ProtobufCFieldOptionsB\005\332\?\002\010\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_sccs[3] = {
  &scc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base,
  &scc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base,
  &scc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto = {
  false, false, descriptor_table_protodef_protobuf_2dc_2fprotobuf_2dc_2eproto, "protobuf-c/protobuf-c.proto", 680,
  &descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_once, descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_sccs, descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_protobuf_2dc_2fprotobuf_2dc_2eproto::offsets,
  file_level_metadata_protobuf_2dc_2fprotobuf_2dc_2eproto, 3, file_level_enum_descriptors_protobuf_2dc_2fprotobuf_2dc_2eproto, file_level_service_descriptors_protobuf_2dc_2fprotobuf_2dc_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protobuf_2dc_2fprotobuf_2dc_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protobuf_2dc_2fprotobuf_2dc_2eproto)), true);

// ===================================================================

void ProtobufCFileOptions::InitAsDefaultInstance() {
}
class ProtobufCFileOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtobufCFileOptions>()._has_bits_);
  static void set_has_no_generate(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_gen_pack_helpers(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_gen_init_helpers(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_const_strings(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_use_oneof_field_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_c_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtobufCFileOptions::ProtobufCFileOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtobufCFileOptions)
}
ProtobufCFileOptions::ProtobufCFileOptions(const ProtobufCFileOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_c_package()) {
    c_package_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_c_package(),
      GetArena());
  }
  ::memcpy(&no_generate_, &from.no_generate_,
    static_cast<size_t>(reinterpret_cast<char*>(&gen_init_helpers_) -
    reinterpret_cast<char*>(&no_generate_)) + sizeof(gen_init_helpers_));
  // @@protoc_insertion_point(copy_constructor:ProtobufCFileOptions)
}

void ProtobufCFileOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base);
  c_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&no_generate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_oneof_field_name_) -
      reinterpret_cast<char*>(&no_generate_)) + sizeof(use_oneof_field_name_));
  gen_pack_helpers_ = true;
  gen_init_helpers_ = true;
}

ProtobufCFileOptions::~ProtobufCFileOptions() {
  // @@protoc_insertion_point(destructor:ProtobufCFileOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtobufCFileOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  c_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtobufCFileOptions::ArenaDtor(void* object) {
  ProtobufCFileOptions* _this = reinterpret_cast< ProtobufCFileOptions* >(object);
  (void)_this;
}
void ProtobufCFileOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtobufCFileOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtobufCFileOptions& ProtobufCFileOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtobufCFileOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base);
  return *internal_default_instance();
}


void ProtobufCFileOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufCFileOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    c_package_.ClearNonDefaultToEmpty();
  }
  ::memset(&no_generate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_oneof_field_name_) -
      reinterpret_cast<char*>(&no_generate_)) + sizeof(use_oneof_field_name_));
  if (cached_has_bits & 0x00000030u) {
    gen_pack_helpers_ = true;
    gen_init_helpers_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtobufCFileOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool no_generate = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_no_generate(&has_bits);
          no_generate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool gen_pack_helpers = 2 [default = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_gen_pack_helpers(&has_bits);
          gen_pack_helpers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool gen_init_helpers = 3 [default = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_gen_init_helpers(&has_bits);
          gen_init_helpers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool const_strings = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_const_strings(&has_bits);
          const_strings_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_oneof_field_name = 5 [default = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_use_oneof_field_name(&has_bits);
          use_oneof_field_name_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string c_package = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_c_package();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtobufCFileOptions.c_package");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtobufCFileOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufCFileOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool no_generate = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_no_generate(), target);
  }

  // optional bool gen_pack_helpers = 2 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_gen_pack_helpers(), target);
  }

  // optional bool gen_init_helpers = 3 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_gen_init_helpers(), target);
  }

  // optional bool const_strings = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_const_strings(), target);
  }

  // optional bool use_oneof_field_name = 5 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_use_oneof_field_name(), target);
  }

  // optional string c_package = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_c_package().data(), static_cast<int>(this->_internal_c_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtobufCFileOptions.c_package");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_c_package(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufCFileOptions)
  return target;
}

size_t ProtobufCFileOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufCFileOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string c_package = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_c_package());
    }

    // optional bool no_generate = 1 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool const_strings = 4 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool use_oneof_field_name = 5 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool gen_pack_helpers = 2 [default = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool gen_init_helpers = 3 [default = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufCFileOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufCFileOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufCFileOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtobufCFileOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufCFileOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufCFileOptions)
    MergeFrom(*source);
  }
}

void ProtobufCFileOptions::MergeFrom(const ProtobufCFileOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufCFileOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_c_package(from._internal_c_package());
    }
    if (cached_has_bits & 0x00000002u) {
      no_generate_ = from.no_generate_;
    }
    if (cached_has_bits & 0x00000004u) {
      const_strings_ = from.const_strings_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_oneof_field_name_ = from.use_oneof_field_name_;
    }
    if (cached_has_bits & 0x00000010u) {
      gen_pack_helpers_ = from.gen_pack_helpers_;
    }
    if (cached_has_bits & 0x00000020u) {
      gen_init_helpers_ = from.gen_init_helpers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtobufCFileOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufCFileOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufCFileOptions::CopyFrom(const ProtobufCFileOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufCFileOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufCFileOptions::IsInitialized() const {
  return true;
}

void ProtobufCFileOptions::InternalSwap(ProtobufCFileOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  c_package_.Swap(&other->c_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtobufCFileOptions, use_oneof_field_name_)
      + sizeof(ProtobufCFileOptions::use_oneof_field_name_)
      - PROTOBUF_FIELD_OFFSET(ProtobufCFileOptions, no_generate_)>(
          reinterpret_cast<char*>(&no_generate_),
          reinterpret_cast<char*>(&other->no_generate_));
  swap(gen_pack_helpers_, other->gen_pack_helpers_);
  swap(gen_init_helpers_, other->gen_init_helpers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtobufCFileOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtobufCMessageOptions::InitAsDefaultInstance() {
}
class ProtobufCMessageOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtobufCMessageOptions>()._has_bits_);
  static void set_has_gen_pack_helpers(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_gen_init_helpers(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_base_field_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_;
ProtobufCMessageOptions::ProtobufCMessageOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtobufCMessageOptions)
}
ProtobufCMessageOptions::ProtobufCMessageOptions(const ProtobufCMessageOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_field_name_.UnsafeSetDefault(&::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get());
  if (from._internal_has_base_field_name()) {
    base_field_name_.Set(&::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get(), from._internal_base_field_name(),
      GetArena());
  }
  ::memcpy(&gen_pack_helpers_, &from.gen_pack_helpers_,
    static_cast<size_t>(reinterpret_cast<char*>(&gen_init_helpers_) -
    reinterpret_cast<char*>(&gen_pack_helpers_)) + sizeof(gen_init_helpers_));
  // @@protoc_insertion_point(copy_constructor:ProtobufCMessageOptions)
}

void ProtobufCMessageOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base);
  base_field_name_.UnsafeSetDefault(&::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get());
  gen_pack_helpers_ = false;
  gen_init_helpers_ = true;
}

ProtobufCMessageOptions::~ProtobufCMessageOptions() {
  // @@protoc_insertion_point(destructor:ProtobufCMessageOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtobufCMessageOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_field_name_.DestroyNoArena(&::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get());
}

void ProtobufCMessageOptions::ArenaDtor(void* object) {
  ProtobufCMessageOptions* _this = reinterpret_cast< ProtobufCMessageOptions* >(object);
  (void)_this;
}
void ProtobufCMessageOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtobufCMessageOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtobufCMessageOptions& ProtobufCMessageOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtobufCMessageOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base);
  return *internal_default_instance();
}


void ProtobufCMessageOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufCMessageOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    base_field_name_.ClearToDefault(&::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get(), GetArena());
  }
  if (cached_has_bits & 0x00000006u) {
    gen_pack_helpers_ = false;
    gen_init_helpers_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtobufCMessageOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool gen_pack_helpers = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_gen_pack_helpers(&has_bits);
          gen_pack_helpers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool gen_init_helpers = 2 [default = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_gen_init_helpers(&has_bits);
          gen_init_helpers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string base_field_name = 3 [default = "base"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_base_field_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtobufCMessageOptions.base_field_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtobufCMessageOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufCMessageOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool gen_pack_helpers = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_gen_pack_helpers(), target);
  }

  // optional bool gen_init_helpers = 2 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_gen_init_helpers(), target);
  }

  // optional string base_field_name = 3 [default = "base"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_base_field_name().data(), static_cast<int>(this->_internal_base_field_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtobufCMessageOptions.base_field_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_base_field_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufCMessageOptions)
  return target;
}

size_t ProtobufCMessageOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufCMessageOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string base_field_name = 3 [default = "base"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_base_field_name());
    }

    // optional bool gen_pack_helpers = 1 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool gen_init_helpers = 2 [default = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufCMessageOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufCMessageOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufCMessageOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtobufCMessageOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufCMessageOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufCMessageOptions)
    MergeFrom(*source);
  }
}

void ProtobufCMessageOptions::MergeFrom(const ProtobufCMessageOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufCMessageOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_base_field_name(from._internal_base_field_name());
    }
    if (cached_has_bits & 0x00000002u) {
      gen_pack_helpers_ = from.gen_pack_helpers_;
    }
    if (cached_has_bits & 0x00000004u) {
      gen_init_helpers_ = from.gen_init_helpers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtobufCMessageOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufCMessageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufCMessageOptions::CopyFrom(const ProtobufCMessageOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufCMessageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufCMessageOptions::IsInitialized() const {
  return true;
}

void ProtobufCMessageOptions::InternalSwap(ProtobufCMessageOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  base_field_name_.Swap(&other->base_field_name_, &::ProtobufCMessageOptions::_i_give_permission_to_break_this_code_default_base_field_name_.get(), GetArena());
  swap(gen_pack_helpers_, other->gen_pack_helpers_);
  swap(gen_init_helpers_, other->gen_init_helpers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtobufCMessageOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtobufCFieldOptions::InitAsDefaultInstance() {
}
class ProtobufCFieldOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtobufCFieldOptions>()._has_bits_);
  static void set_has_string_as_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtobufCFieldOptions::ProtobufCFieldOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtobufCFieldOptions)
}
ProtobufCFieldOptions::ProtobufCFieldOptions(const ProtobufCFieldOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  string_as_bytes_ = from.string_as_bytes_;
  // @@protoc_insertion_point(copy_constructor:ProtobufCFieldOptions)
}

void ProtobufCFieldOptions::SharedCtor() {
  string_as_bytes_ = false;
}

ProtobufCFieldOptions::~ProtobufCFieldOptions() {
  // @@protoc_insertion_point(destructor:ProtobufCFieldOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtobufCFieldOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtobufCFieldOptions::ArenaDtor(void* object) {
  ProtobufCFieldOptions* _this = reinterpret_cast< ProtobufCFieldOptions* >(object);
  (void)_this;
}
void ProtobufCFieldOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtobufCFieldOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtobufCFieldOptions& ProtobufCFieldOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtobufCFieldOptions_protobuf_2dc_2fprotobuf_2dc_2eproto.base);
  return *internal_default_instance();
}


void ProtobufCFieldOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufCFieldOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_as_bytes_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtobufCFieldOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool string_as_bytes = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_string_as_bytes(&has_bits);
          string_as_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtobufCFieldOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufCFieldOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool string_as_bytes = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_string_as_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufCFieldOptions)
  return target;
}

size_t ProtobufCFieldOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufCFieldOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool string_as_bytes = 1 [default = false];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufCFieldOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufCFieldOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufCFieldOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtobufCFieldOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufCFieldOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufCFieldOptions)
    MergeFrom(*source);
  }
}

void ProtobufCFieldOptions::MergeFrom(const ProtobufCFieldOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufCFieldOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_string_as_bytes()) {
    _internal_set_string_as_bytes(from._internal_string_as_bytes());
  }
}

void ProtobufCFieldOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufCFieldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufCFieldOptions::CopyFrom(const ProtobufCFieldOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufCFieldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufCFieldOptions::IsInitialized() const {
  return true;
}

void ProtobufCFieldOptions::InternalSwap(ProtobufCFieldOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(string_as_bytes_, other->string_as_bytes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtobufCFieldOptions::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ProtobufCFileOptions >, 11, false >
  pb_c_file(kPbCFileFieldNumber, ::ProtobufCFileOptions::default_instance());
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ProtobufCMessageOptions >, 11, false >
  pb_c_msg(kPbCMsgFieldNumber, ::ProtobufCMessageOptions::default_instance());
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ProtobufCFieldOptions >, 11, false >
  pb_c_field(kPbCFieldFieldNumber, ::ProtobufCFieldOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtobufCFileOptions* Arena::CreateMaybeMessage< ::ProtobufCFileOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtobufCFileOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtobufCMessageOptions* Arena::CreateMaybeMessage< ::ProtobufCMessageOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtobufCMessageOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtobufCFieldOptions* Arena::CreateMaybeMessage< ::ProtobufCFieldOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtobufCFieldOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
